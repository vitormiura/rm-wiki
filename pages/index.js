import { useEffect, useState } from 'react';
import Head from 'next/head'
import styles from '../styles/Home.module.css'

const defaultEndpoint = 'https://rickandmortyapi.com/api/character';

export async function getServerSideProps() {
  const res = await fetch(defaultEndpoint);
  const data = await res.json();
  return {
    props: {
      data
    }
  }
}

export default function Home({ data }) {
  const { info, results: defaultResults = [] } = data;
  const [results, updateResults] = useState(defaultResults);
  const [page, updatePage] = useState({
    ...info,
    current: defaultEndpoint
  });
  const { current } = page;

  useEffect (() => {
    if (current === defaultEndpoint) return;

    async function request(){
      const res = await fetch(current)
      const nextData = await res.json()

      updatePage({
        current,
        ...nextData.info
      });

      if (!nextData.info?.prev){
        updateResults(nextData.results);
        return;
      }

      updateResults(prev =>{
        return[
          ...prev,
          ...nextData.results
        ]
      })
    }
    request();
  }, [current]);

  function loadMore(){
    updatePage(prev => {
      return{
        ...prev,
        current: page?.next
      }
    })
  }

  function submitSearch(e) {
    e.preventDefault();

    const { currentTarget = {} } = e;
    const fields = Array.from(currentTarget?.elements);
    const fieldQuery = fields.find(field => field.name === 'query');

    const value = fieldQuery.value || '';
    const endpoint = `https://rickandmortyapi.com/api/character/?name=${value}`;

    updatePage({
      current: endpoint
    });
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>bololo haha</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          bololo haha
        </h1>

        <p className={styles.description}>
          rico & morto wiki!
        </p>

        <form className={styles.search} onSubmit={submitSearch}>
          <input name='query' type='search' />
          <button>Search</button>
        </form>

        <ul className={styles.grid}>
          {results.map(result => {
            const { id, name, image } = result;
            return (
              <li key={ id } className={styles.card}>
                <a href="">
                  <img src={ image } alt={`${ name } Thumb`}></img>
                  <h2>{ name }</h2>
                </a>
              </li>
            )
          })}

        </ul>

        <p>
          <button onClick={loadMore}>Load more</button>
        </p>
      </main>

      <footer className={styles.footer}>
        <a
          href="www.vitormiura.dev"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' BINLADEN'}
        </a>
      </footer>
    </div>
  )
}
